#!/bin/bash
#
#(execute my job from the current directory)
#$ -cwd
#
#(the same OS as login machine)
#$ -l arch=amd64
#$ -l os=sld6
#
#(the cpu time for my job)
#$ -l h_rt=23:59:00
#
#(the maximum memory for my job)
#$ -l h_vmem=5G
#
# stderr and stdout dirs
#$ -e /tmp
#$ -o /tmp
#

# TODO some variables are still hard coded ...


# precision of the photon energy after calibration
calibrationPrecison=0.02

# the maximum number of steps to reah the required photon precision
maxNSteps=5

# particle type is obviously photon ...
particle="photon"

# detector geometry
detectorGeometry="ILD_l4_v02"

# input/output directory in afs pool dir
inputDirectory="/afs/desy.de/group/flc/pool/eteremi"
outputDirectory="/afs/desy.de/group/flc/pool/eteremi"

# ilcsoft version
ilcsoftVersion="v01-19-03-pre02"

# scripts dir
scriptsDirectory=""

if [ -z "$PANDORA_CALIBRATION_JOBS_DIR" ]; then
  scriptsDirectory="$HOME/soft/PandoraCalibrationJobs/scripts/calibration"
else
  scriptsDirectory="$PANDORA_CALIBRATION_JOBS_DIR/scripts/calibration"
fi


if [ "$#" -gt "1" ]; then
  ilcsoftVersion=$1
fi

if [ "$#" -gt "2" ]; then
  detectorGeometry=$2
fi

if [ "$#" -gt "3" ]; then
  inputDirectory=$3
fi

if [ "$#" -gt "4" ]; then
  outputDirectory=$4
fi

# run directory
runDirectory=`mktemp --dir`

# input/output file(s)
inputFile="ddsim-${particle}-s${ilcsoftVersion}-G${detectorGeometry}-calibration.slcio"
pfoAnalysisFile="marlin-calib-ecal-PfoAnalysis-${particle}-s${ilcsoftVersion}-G${detectorGeometry}.root"
ecalMipCalibrationFile="calibration-ecal-mip.txt"  # temporary file name for convenience

# log file base name
logFileBase="marlin-calib-ecal-${particle}-s${ilcsoftVersion}-G${detectorGeometry}"


# ==============
# Start of script

# create output directory
if [ ! -d "$outputDirectory" ]; then
  echo "Creating output directory: $outputDirectory"
  mkdir -p $outputDirectory

  if [ "$?" -neq "0" ]; then
    echo "Couldn't create output directory: $outputDirectory"
    exit 1
  fi
fi


# cd run directory and copy needed scripts for simulation
cd $runDirectory
cp $scriptsDirectory/* .
cp -r /afs/desy.de/project/ilcsoft/sw/ILDConfig/trunk/StandardConfig/lcgeo_current/* .

# ilcsoft stuff
unset MARLIN_DLL
source /afs/desy.de/project/ilcsoft/sw/x86_64_gcc49_sl6/${ilcsoftVersion}/init_ilcsoft.sh

echo "Running with ilcsoft version ${ilcsoftVersion}"
echo "Running with detector geometry ${detectorGeometry}"

# Start by converting the dd4hep geometry to gear for current ilcsoft version
convertToGear default ${lcgeo_DIR}/ILD/compact/${detectorGeometry}/${detectorGeometry}.xml gear_${detectorGeometry}_dd4hep.xml


# extract the ecal mip from PfoAnalysis root file
pandoraAnalaysisVersion=`ls ${ILCSOFT}/PandoraAnalysis | awk '{print $1}'`
${ILCSOFT}/PandoraAnalysis/${pandoraAnalaysisVersion}/bin/SimCaloHitEnergyDistribution -a ${inputDirectory}/${pfoAnalysisFile} -b 10 -c ./
mv Calibration.txt ${ecalMipCalibrationFile}

ecalMip=`./extract-calibration-constants ${ecalMipCalibrationFile} echo-ecal`
ret=$?

if [ $ret -ne 0 ]; then
  echo "Couldn't extract the ecal mip constant !"
  exit $ret
fi


#
#
# echo ""
# echo "=============================="
# echo "======= RUNNING MARLIN ======="
# echo "=============================="
#
# Marlin --global.LCIOInputFiles="${inputDirectory}/${inputFile}" \
#   --global.GearXMLFile=gear_${detectorGeometry}_dd4hep.xml \
#   --InitDD4hep.DD4hepXMLFile=${lcgeo_DIR}/ILD/compact/${detectorGeometry}/${detectorGeometry}.xml \
#   bbudsc_3evt_stdreco_dd4hep.xml \
#   > ${logFile}
#
# echo ""
# echo "=============================="
# echo "=======  MARLIN  DONE  ======="
# echo "=============================="
#
# cp PfoAnalysis.root ${outputDirectory}/${pfoAnalysisFile}
# cp ${logFile} ${outputDirectory}

# clean up run directory
rm -rf ${runDirectory}

#
